testData = fullData[testRows, ]
trainData = fullData[-testRows, ]
model1 <- lm(logBCF ~ ., data = trainData)
summary(model1)
set.seed(100)
n = nrow(trainData)
#calculate CP
Cp(model1, S2=summary(model1)$sigma^2)
#Calculate AIC
AIC(model1, k=2)
#Calculate BIC
AIC(model1, k=log(n))
set.seed(100)
model2 <- lm(logBCF ~ nHM + MLOGP + F04.C.O., data = trainData)
summary(model2)
anova(model1, model2)
set.seed(100)
# calculate number of subsets
out <- leaps(trainData[,-c(10)], trainData[,10], method = "Cp")
nrow(out$which)
# best model of each size
out <- leaps(trainData[,-c(10)], trainData[,10], method = "Cp", nbest = 1)
cbind(as.matrix(out$which),out$Cp)
set.seed(100)
best_model <- which(out$Cp == min(out$Cp))
var_selection <- as.matrix(out$which)[best_model, ]
colnames(trainData[, -10])[var_selection]
model3 <- lm(logBCF ~ nHM + piPC09 + MLOGP + ON1V + B02.C.N. + F04.C.O.,
data = trainData)
summary(model3)
set.seed(100)
n = nrow(trainData)
minimum_model = lm(logBCF ~ 1, data = trainData)
model4 <- step(model1, scope=list(lower=minimum_model,
upper=model1),
direction="backward", k = log(n))
summary(model4)
set.seed(100)
model5 <- step(minimum_model, scope=list(lower=minimum_model,
upper=model1),
direction="forward", k = 2)
summary(model5)
set.seed(100)
model_compare <- data.frame(
Model = c(1,3,4),
Adj.R.Squared = c(summary(model1)$adj.r.squared,
summary(model3)$adj.r.squared,
summary(model4)$adj.r.squared),
Cp = c(Cp(model1, S2=summary(model1)$sigma^2),
Cp(model3, S2=summary(model3)$sigma^2),
Cp(model4, S2=summary(model4)$sigma^2)),
AIC = c(AIC(model1, k=2),
AIC(model3, k=2),
AIC(model4, k=2)),
BIC = c(AIC(model1, k=log(n)),
AIC(model3, k=log(n)),
AIC(model4, k=log(n)))
)
model_compare
set.seed(100)
predictors = as.matrix(trainData[ , 1:9])
logBCF = trainData$logBCF
# perform ridge regression
ridge.cv <- cv.glmnet(predictors, logBCF, alpha=0, nfolds=10)
best_lambda <- ridge.cv$lambda.min
best_lambda
set.seed(100)
ridge = lm.ridge(logBCF ~ ., data = trainData, lambda = best_lambda)
data.frame(ridge$coef)
ridge <- glmnet(predictors, logBCF, alpha=0, nfolds=10)
coef(ridge, s=ridge.cv$lambda.min)
set.seed(100)
ridge <- glmnet(predictors, logBCF, alpha=0, nfolds=10)
coef(ridge, s=ridge.cv$lambda.min)
set.seed(100)
# perform lasso regression
lasso.cv <- cv.glmnet(predictors, logBCF, alpha=1, nfolds=10)
best_lambda <- lasso.cv$lambda.min
best_lambda
set.seed(100)
lasso = glmnet(predictors, logBCF, alpha = 1, nlambda=100)
plot(lasso,xvar="lambda", lwd=2)
abline(v=log(lasso.cv$lambda.min), col='black', lty=2)
set.seed(100)
coef(lasso, s=lasso.cv$lambda.min)
set.seed(100)
elastic.cv <- cv.glmnet(predictors, logBCF, alpha=0.5, nfolds=10)
best_lambda <- elastic.cv$lambda.min
best_lambda
set.seed(100)
elastic.cv <- cv.glmnet(predictors, logBCF, alpha=0.5, nfolds=10)
best_lambda <- elastic.cv$lambda.min
best_lambda
set.seed(100)
elastic = glmnet(predictors, logBCF, alpha=0.5, nlambda = 100)
coef(elastic, s = elastic.cv$lambda.min)
set.seed(100)
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newdata = testData)
set.seed(100)
# create new predictor matrix
testData
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newdata = testData)
set.seed(100)
# create new predictor matrix
new_predictor <- testData[ , 1:9]
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newdata = testData)
set.seed(100)
# create new predictor matrix
new_predictor <- testData[ , 1:9]
new_predictor
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newdata = testData)
set.seed(100)
# create new predictor matrix
new_predictor <- testData[ , 1:9]
print(new_predictor)
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newdata = testData)
set.seed(100)
# create new predictor matrix
new_predictor <- as.matrix(testData[ , 1:9])
new_predictor
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newdata = testData)
set.seed(100)
# create new predictor matrix
new_predictor <- as.matrix(testData[ , 1:9])
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newdata = testData)
set.seed(100)
# create new predictor matrix
new_predictor <- as.matrix(testData[ , 1:9])
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newx = new_predictor)
cat("Predictions for model found using ridge regression : \n\n")
head(pred_ridge)
set.seed(100)
# create new predictor matrix
new_predictor <- as.matrix(testData[ , 1:9])
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newx = new_predictor)
cat("Predictions for model found using ridge regression : \n\n")
pred_ridge
set.seed(100)
# create new predictor matrix
new_predictor <- as.matrix(testData[ , 1:9])
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newx = new_predictor, s=ridge.cv$lambda.min)
cat("Predictions for model found using ridge regression : \n\n")
pred_ridge
set.seed(100)
# create new predictor matrix
new_predictor <- as.matrix(testData[ , 1:9])
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newx = new_predictor, s=ridge.cv$lambda.min)
cat("Predictions for model found using ridge regression : \n\n")
head(pred_ridge)
set.seed(100)
testData
# create new predictor matrix
new_predictor <- as.matrix(testData[ , 1:9])
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newx = new_predictor, s=ridge.cv$lambda.min)
cat("Predictions for model found using ridge regression : \n\n")
head(pred_ridge)
# Lasso & Elastic net
#Retrain the model
lasso.retrain <-
pred_ridge <- predict(ridge, newx = new_predictor, s=ridge.cv$lambda.min)
cat("Predictions for model found using ridge regression : \n\n")
head(pred_ridge)
set.seed(100)
# create new predictor matrix
new_predictor <- as.matrix(testData[ , 1:9])
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newx = new_predictor, s=ridge.cv$lambda.min)
cat("Predictions for model found using ridge regression : \n\n")
head(pred_ridge)
# Lasso & Elastic net
#Retrain the model
lasso.retrain <-
pred_ridge <- predict(ridge, newx = new_predictor, s=ridge.cv$lambda.min)
cat("Predictions for model found using ridge regression : \n\n")
head(pred_ridge)
set.seed(100)
# create new predictor matrix
new_predictor <- as.matrix(testData[ , 1:9])
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newx = new_predictor, s=ridge.cv$lambda.min)
cat("Predictions for model found using ridge regression : \n\n")
head(pred_ridge)
# Lasso & Elastic net
#Retrain the model
lasso.retrain <- lm(logBCF ~ nHM + piPC09 + PCD + MLOGP + ON1V +
N.072 + B02.C.N. + F04.C.O. ,
data = trainData)
pred_lasso <- predict(lasso.retrain, newdata = testData)
cat("Predictions for model found using lasso regression : \n\n")
head(pred_lasso)
set.seed(100)
# create new predictor matrix
new_predictor <- as.matrix(testData[ , 1:9])
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newx = new_predictor, s=ridge.cv$lambda.min)
cat("Predictions for model found using ridge regression : \n\n")
head(pred_ridge)
# Lasso & Elastic net
#Retrain the model
lasso.retrain <- lm(logBCF ~ nHM + piPC09 + PCD + MLOGP + ON1V +
N.072 + B02.C.N. + F04.C.O. ,
data = trainData)
pred_lasso <- predict(lasso.retrain, newdata = testData)
cat("Predictions for model found using lasso regression : \n\n")
head(pred_lasso)
cat("Predictions for model found using elastic net (same as predictions by lasso regression) : \n\n")
head(pred_lasso)
set.seed(100)
# full model
MSPE_full <- mean((pred_full - testData$logBCF)^2)
cat("MSPE of full model: \n\n")
MSPE_full
set.seed(100)
# full model
MSPE_full <- mean((pred_full - testData$logBCF)^2)
cat("MSPE of full model: \n\n")
MSPE_full
# backward stepwise regression with BIC
MSPE_backward <- mean((pred_backward - testData$logBCF)^2)
cat("MSPE of model found using backward stepwise regression with BICl: \n\n")
MSPE_backward
set.seed(100)
# full model
MSPE_full <- mean((pred_full - testData$logBCF)^2)
cat("MSPE of full model: \n\n")
MSPE_full
# backward stepwise regression with BIC
MSPE_backward <- mean((pred_backward - testData$logBCF)^2)
cat("MSPE of model found using backward stepwise regression with BICl: \n\n")
MSPE_backward
# ridge regression
MSPE_ridge <- mean((pred_ridge - testData$logBCF)^2)
cat("MSPE of ridge regression: \n\n")
MSPE_ridge
set.seed(100)
# full model
MSPE_full <- mean((pred_full - testData$logBCF)^2)
cat("MSPE of full model: \n\n")
MSPE_full
# backward stepwise regression with BIC
MSPE_backward <- mean((pred_backward - testData$logBCF)^2)
cat("MSPE of model found using backward stepwise regression with BICl: \n\n")
MSPE_backward
# ridge regression
MSPE_ridge <- mean((pred_ridge - testData$logBCF)^2)
cat("MSPE of ridge regression: \n\n")
MSPE_ridge
# lasso regression
MSPE_lasso <- mean((pred_lasso - testData$logBCF)^2)
cat("MSPE of lasso regression: \n\n")
MSPE_lasso
set.seed(100)
# create new predictor matrix
new_predictor <- as.matrix(testData[ , 1:9])
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newx = new_predictor, s=ridge.cv$lambda.min)
cat("Predictions for model found using ridge regression : \n\n")
head(pred_ridge)
# Lasso & Elastic net
#Retrain the model
lasso.retrain <- lm(logBCF ~ nHM + piPC09 + PCD + MLOGP + ON1V +
N.072 + B02.C.N. + F04.C.O. ,
data = trainData)
pred_lasso <- predict(lasso.retrain, newdata = testData)
cat("Predictions for model found using lasso regression : \n\n")
head(pred_lasso)
cat("Predictions for model found using elastic net (same as predictions by lasso regression) : \n\n")
pred_elastic <- pred_lasso
head(pred_lasso)
set.seed(100)
# create new predictor matrix
new_predictor <- as.matrix(testData[ , 1:9])
# full model
pred_full <- predict(model1, newdata = testData)
cat("Predictions for full model: \n\n")
head(pred_full)
# backward stepwise regression with BIC
pred_backward <- predict(model4, newdata = testData)
cat("Predictions for model found using backward stepwise regression with BIC: \n\n")
head(pred_backward)
# Ridge regression
pred_ridge <- predict(ridge, newx = new_predictor, s=ridge.cv$lambda.min)
cat("Predictions for model found using ridge regression : \n\n")
head(pred_ridge)
# Lasso & Elastic net
#Retrain the model
lasso.retrain <- lm(logBCF ~ nHM + piPC09 + PCD + MLOGP + ON1V +
N.072 + B02.C.N. + F04.C.O. ,
data = trainData)
pred_lasso <- predict(lasso.retrain, newdata = testData)
cat("Predictions for model found using lasso regression : \n\n")
head(pred_lasso)
cat("Predictions for model found using elastic net (same as predictions by lasso regression) : \n\n")
pred_elastic <- pred_lasso
head(pred_elastic)
set.seed(100)
# full model
MSPE_full <- mean((pred_full - testData$logBCF)^2)
cat("MSPE of full model: \n\n")
MSPE_full
# backward stepwise regression with BIC
MSPE_backward <- mean((pred_backward - testData$logBCF)^2)
cat("MSPE of model found using backward stepwise regression with BICl: \n\n")
MSPE_backward
# ridge regression
MSPE_ridge <- mean((pred_ridge - testData$logBCF)^2)
cat("MSPE of ridge regression: \n\n")
MSPE_ridge
# lasso regression
MSPE_lasso <- mean((pred_lasso - testData$logBCF)^2)
cat("MSPE of lasso regression: \n\n")
MSPE_lasso
# elastic net
MSPE_elastic <- mean((pred_elastic - testData$logBCF)^2)
cat("MSPE of lasso regression: \n\n")
MSPE_elastic
set.seed(100)
# full model
MSPE_full <- mean((pred_full - testData$logBCF)^2)
cat("MSPE of full model: \n\n", MSPE_full)
# backward stepwise regression with BIC
MSPE_backward <- mean((pred_backward - testData$logBCF)^2)
cat("MSPE of model found using backward stepwise regression with BICl: \n\n")
MSPE_backward
# ridge regression
MSPE_ridge <- mean((pred_ridge - testData$logBCF)^2)
cat("MSPE of ridge regression: \n\n")
MSPE_ridge
# lasso regression
MSPE_lasso <- mean((pred_lasso - testData$logBCF)^2)
cat("MSPE of lasso regression: \n\n")
MSPE_lasso
# elastic net
MSPE_elastic <- mean((pred_elastic - testData$logBCF)^2)
cat("MSPE of lasso regression: \n\n")
MSPE_elastic
set.seed(100)
# full model
MSPE_full <- mean((pred_full - testData$logBCF)^2)
cat("MSPE of full model:", MSPE_full, "\n")
# backward stepwise regression with BIC
MSPE_backward <- mean((pred_backward - testData$logBCF)^2)
cat("MSPE of model found using backward stepwise regression with BICl: \n\n")
MSPE_backward
# ridge regression
MSPE_ridge <- mean((pred_ridge - testData$logBCF)^2)
cat("MSPE of ridge regression: \n\n")
MSPE_ridge
# lasso regression
MSPE_lasso <- mean((pred_lasso - testData$logBCF)^2)
cat("MSPE of lasso regression: \n\n")
MSPE_lasso
# elastic net
MSPE_elastic <- mean((pred_elastic - testData$logBCF)^2)
cat("MSPE of lasso regression: \n\n")
MSPE_elastic
set.seed(100)
# full model
MSPE_full <- mean((pred_full - testData$logBCF)^2)
cat("MSPE of full model:", MSPE_full, "\n")
# backward stepwise regression with BIC
MSPE_backward <- mean((pred_backward - testData$logBCF)^2)
cat("MSPE of model found using backward stepwise regression with BICl: ",MSPE_backward, "\n")
# ridge regression
MSPE_ridge <- mean((pred_ridge - testData$logBCF)^2)
cat("MSPE of ridge regression: ",MSPE_ridge, "\n")
# lasso regression
MSPE_lasso <- mean((pred_lasso - testData$logBCF)^2)
cat("MSPE of lasso regression: ", MSPE_lasso, "\n")
# elastic net
MSPE_elastic <- mean((pred_elastic - testData$logBCF)^2)
cat("MSPE of lasso regression: ","MSPE_elastic","\n")
