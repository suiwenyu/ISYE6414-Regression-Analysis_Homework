# Create variable Staying
rawdata$Staying = rawdata$Stay/rawdata$Employees
# Set variables as categoricals
rawdata$Num.Of.Products<-as.factor(rawdata$Num.Of.Products)
rawdata$Age.Group<-as.factor(rawdata$Age.Group)
rawdata$Gender<-as.factor(rawdata$Gender)
rawdata$Is.Active.Member<-as.factor(rawdata$Is.Active.Member)
# Print head of rawdata
head(rawdata)
model1 <- glm(Staying ~ Num.Of.Products, data = rawdata, family = binomial,
weights = Employee)
model1 <- glm(Staying ~ Num.Of.Products, data = rawdata, family = binomial,
weights = rawdata$Employee)
model1 <- glm(Staying ~ Num.Of.Products, data = rawdata, family = binomial,
weights = rawdata$Employee)
summary(model1)
confint(model1, level = 0.9)
confint(model1, level = 0.9)
confint(model1, level = 0.9)
confint(model1, level = 0.9)
confint.default(model1, level = 0.9)
confint(model1, level = 0.9)
confint.glm(model1, level = 0.9)
confint(model1, level = 0.9)
exp(confint(model1, level = 0.9))
exp(confint(model1, level = 0.9))
exp(confint(model1, level = 0.9))
exp(confint(model1, level = 0.9))
confint(model1, level = 0.9)
1 - pchisq(smoke1$null.deviance-smoke1$deviance, 1)
1 - pchisq(model1$null.deviance-model1$deviance, 1)
#calculate p-value at 0.01 significance level
1 - pchisq(model1$null.deviance-model1$deviance, 1)
summary(model1)
summary(model1)
summary(model1)
summary(model1)
summary(model1)$coefficients
summary(model1)$coefficients[1,3]
1-pz(summary(model1)$coefficients[1,3])
1-pt(summary(model1)$coefficients[1,3])
1-PZ(summary(model1)$coefficients[1,3])
1-PZ(summary(model1)$coefficients[1,3])
1-PZ(summary(model1)$coefficients[1,3])
1-pt(summary(model1)$coefficients[1,3],1)
1-pz(summary(model1)$coefficients[1,3],1)
summary(model1)
summary(model1)$coefficients
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
setwd("E:/Data")
library(car)
summary(model1)$
summary(model1)$
# Import the data
rawdata = read.csv("hw4_data.csv", header=TRUE, fileEncoding="UTF-8-BOM")
# Create variable Staying
rawdata$Staying = rawdata$Stay/rawdata$Employees
# Set variables as categoricals
rawdata$Num.Of.Products<-as.factor(rawdata$Num.Of.Products)
rawdata$Age.Group<-as.factor(rawdata$Age.Group)
rawdata$Gender<-as.factor(rawdata$Gender)
rawdata$Is.Active.Member<-as.factor(rawdata$Is.Active.Member)
# Print head of rawdata
head(rawdata)
model1 <- glm(Staying ~ Num.Of.Products, data = rawdata, family = binomial,
weights = rawdata$Employee)
summary(model1)
confint(model1, level = 0.9)
#calculate p-value at 0.01 significance level
1 - pchisq(model1$null.deviance-model1$deviance, 1)
summary(model1)$
summary(model1)$coefficients
summary(model1)
c(deviance(model1), 1-pchisq(deviance(model1),156)
c(deviance(model1), 1-pchisq(deviance(model1)), 156)
c(deviance(model1), 1-pchisq(deviance(model1), 156)
c(deviance(model1), 1-pchisq(deviance(model1), 156))
#goodness of fit test using deviance
c(deviance(model1), 1-pchisq(deviance(model1), 156))
# goodness of fit test using pearson residuals
pearres = residuals(model1,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,156)),2)
qqplot(deviance(model1))
deviance = resid(model1.agg, type="deviance")
deviance = resid(model1, type="deviance")
qqplot(deviance)
deviance = resid(model1, type="deviance")
deviance
qqplot(deviance)
deviance = resid(model1, type="deviance")
qqplot(deviance)
deviance = resid(model1, type="deviance")
qqPlot(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqnorm(deviance)
hist(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqline(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqnorm(deviance)
hist(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
deviance(model1)
overdispersion <- deviance(model1)
overdispersion <- deviance(model1)/156
overdispersion
overdispersion <- deviance(model1)/156
print(overdispersion)
model2 <- glm(Staying ~ Age.Group+Gender+Tenure+Num.Of.Products+Is.Active.Member,
data = rawdata,
family = binomial,
weights = rawdata$Employee)
model2 <- glm(Staying ~ Age.Group+Gender+Tenure+Num.Of.Products+Is.Active.Member,
data = rawdata,
family = binomial,
weights = rawdata$Employee)
summary(model2)
exp(-0.003319)
exp(-0.003319)
---
title: "HW4 Peer Assessment"
---
title: "HW4 Peer Assessment"
exp(-0.003319)
exp(-1.76683)
exp(-0.003319)
exp(-1.76683)
exp(-0.003319)
exp(-0.003319)
exp(-0.003319)
exp(-0.850280)
exp(-0.003319)
exp(-0.850280)
#goodness of fit test using deviance
c(deviance(model2), 1-pchisq(deviance(model2), 150))
# goodness of fit test using pearson residuals
pearres = residuals(model2,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,150)),2)
attach(rawdata)
plot(log(Staying/(1-Staying)), Tenure)
summary(model1)
#goodness of fit test using deviance
c(deviance(model1), 1-pchisq(deviance(model1), 156))
# goodness of fit test using pearson residuals
pearres = residuals(model1,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,156)),2)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
exp(-0.003319)
exp(-0.850280)
#goodness of fit test using deviance
c(deviance(model2), 1-pchisq(deviance(model2), 150))
# goodness of fit test using pearson residuals
pearres = residuals(model2,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,150)),2)
model2 <- glm(Staying ~ Age.Group+Gender+Tenure+Num.Of.Products+Is.Active.Member,
data = rawdata,
family = binomial,
weights = rawdata$Employee)
summary(model2)
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
setwd("E:/Data")
library(car)
# Import the data
rawdata = read.csv("hw4_data.csv", header=TRUE, fileEncoding="UTF-8-BOM")
# Create variable Staying
rawdata$Staying = rawdata$Stay/rawdata$Employees
# Set variables as categoricals
rawdata$Num.Of.Products<-as.factor(rawdata$Num.Of.Products)
rawdata$Age.Group<-as.factor(rawdata$Age.Group)
rawdata$Gender<-as.factor(rawdata$Gender)
rawdata$Is.Active.Member<-as.factor(rawdata$Is.Active.Member)
# Print head of rawdata
head(rawdata)
model1 <- glm(Staying ~ Num.Of.Products, data = rawdata, family = binomial,
weights = rawdata$Employee)
summary(model1)
model1 <- glm(Staying ~ Num.Of.Products, data = rawdata, family = binomial,
weights = rawdata$Employee)
summary(model1)
confint(model1, level = 0.9)
#calculate p-value at 0.01 significance level
1 - pchisq(model1$null.deviance-model1$deviance, 1)
summary(model1)
#goodness of fit test using deviance
c(deviance(model1), 1-pchisq(deviance(model1), 156))
# goodness of fit test using pearson residuals
pearres = residuals(model1,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,156)),2)
#goodness of fit test using deviance
c(deviance(model1), 1-pchisq(deviance(model1), 156))
# goodness of fit test using pearson residuals
pearres = residuals(model1,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,156)),2)
#goodness of fit test using deviance
c(deviance(model1), 1-pchisq(deviance(model1), 156))
# goodness of fit test using pearson residuals
pearres = residuals(model1,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,156)),2)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
overdispersion <- deviance(model1)/156
print(overdispersion)
model2 <- glm(Staying ~ Age.Group+Gender+Tenure+Num.Of.Products+Is.Active.Member,
data = rawdata,
family = binomial,
weights = rawdata$Employee)
summary(model2)
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
setwd("E:/Data")
library(car)
# Import the data
rawdata = read.csv("hw4_data.csv", header=TRUE, fileEncoding="UTF-8-BOM")
# Create variable Staying
rawdata$Staying = rawdata$Stay/rawdata$Employees
# Set variables as categoricals
rawdata$Num.Of.Products<-as.factor(rawdata$Num.Of.Products)
rawdata$Age.Group<-as.factor(rawdata$Age.Group)
rawdata$Gender<-as.factor(rawdata$Gender)
rawdata$Is.Active.Member<-as.factor(rawdata$Is.Active.Member)
# Print head of rawdata
head(rawdata)
model1 <- glm(Staying ~ Num.Of.Products, data = rawdata, family = binomial,
weights = rawdata$Employee)
summary(model1)
confint(model1, level = 0.9)
#calculate p-value at 0.01 significance level
1 - pchisq(model1$null.deviance-model1$deviance, 1)
summary(model1)
#goodness of fit test using deviance
c(deviance(model1), 1-pchisq(deviance(model1), 156))
# goodness of fit test using pearson residuals
pearres = residuals(model1,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,156)),2)
overdispersion <- deviance(model1)/156
print(overdispersion)
model2 <- glm(Staying ~ Age.Group+Gender+Tenure+Num.Of.Products+Is.Active.Member,
data = rawdata,
family = binomial,
weights = rawdata$Employee)
summary(model2)
exp(-0.003319)
exp(-0.850280)
#goodness of fit test using deviance
c(deviance(model2), 1-pchisq(deviance(model2), 150))
# goodness of fit test using pearson residuals
pearres = residuals(model2,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,150)),2)
attach(rawdata)
plot(log(Staying/(1-Staying)), Tenure)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
#goodness of fit test using deviance
c(deviance(model1), 1-pchisq(deviance(model1), 156))
# goodness of fit test using pearson residuals
pearres = residuals(model1,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,156)),2)
#goodness of fit test using deviance
c(deviance(model1), 1-pchisq(deviance(model1), 156))
# goodness of fit test using pearson residuals
pearres = residuals(model1,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,156)),2)
#goodness of fit test using deviance
c(deviance(model1), 1-pchisq(deviance(model1), 156))
# goodness of fit test using pearson residuals
pearres = residuals(model1,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,156)),2)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
deviance = resid(model2, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
deviance = resid(model2, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
setwd("E:/Data")
library(car)
# Import the data
rawdata = read.csv("hw4_data.csv", header=TRUE, fileEncoding="UTF-8-BOM")
# Create variable Staying
rawdata$Staying = rawdata$Stay/rawdata$Employees
# Set variables as categoricals
rawdata$Num.Of.Products<-as.factor(rawdata$Num.Of.Products)
rawdata$Age.Group<-as.factor(rawdata$Age.Group)
rawdata$Gender<-as.factor(rawdata$Gender)
rawdata$Is.Active.Member<-as.factor(rawdata$Is.Active.Member)
# Print head of rawdata
head(rawdata)
model1 <- glm(Staying ~ Num.Of.Products, data = rawdata, family = binomial,
weights = rawdata$Employee)
summary(model1)
confint(model1, level = 0.9)
#calculate p-value at 0.01 significance level
1 - pchisq(model1$null.deviance-model1$deviance, 1)
summary(model1)
#goodness of fit test using deviance
c(deviance(model1), 1-pchisq(deviance(model1), 156))
# goodness of fit test using pearson residuals
pearres = residuals(model1,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,156)),2)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
overdispersion <- deviance(model1)/156
print(overdispersion)
model2 <- glm(Staying ~ Age.Group+Gender+Tenure+Num.Of.Products+Is.Active.Member,
data = rawdata,
family = binomial,
weights = rawdata$Employee)
summary(model2)
exp(-0.003319)
exp(-0.850280)
#goodness of fit test using deviance
c(deviance(model2), 1-pchisq(deviance(model2), 150))
# goodness of fit test using pearson residuals
pearres = residuals(model2,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,150)),2)
attach(rawdata)
plot(log(Staying/(1-Staying)), Tenure)
deviance = resid(model2, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
overdispersion <- deviance(model2)/150
print(overdispersion)
deviance = resid(model2, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
setwd("E:/Data")
library(car)
# Import the data
rawdata = read.csv("hw4_data.csv", header=TRUE, fileEncoding="UTF-8-BOM")
# Create variable Staying
rawdata$Staying = rawdata$Stay/rawdata$Employees
# Set variables as categoricals
rawdata$Num.Of.Products<-as.factor(rawdata$Num.Of.Products)
rawdata$Age.Group<-as.factor(rawdata$Age.Group)
rawdata$Gender<-as.factor(rawdata$Gender)
rawdata$Is.Active.Member<-as.factor(rawdata$Is.Active.Member)
# Print head of rawdata
head(rawdata)
model1 <- glm(Staying ~ Num.Of.Products, data = rawdata, family = binomial,
weights = rawdata$Employee)
summary(model1)
confint(model1, level = 0.9)
#calculate p-value at 0.01 significance level
1 - pchisq(model1$null.deviance-model1$deviance, 1)
summary(model1)
#goodness of fit test using deviance
c(deviance(model1), 1-pchisq(deviance(model1), 156))
# goodness of fit test using pearson residuals
pearres = residuals(model1,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,156)),2)
deviance = resid(model1, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
overdispersion <- deviance(model1)/156
print(overdispersion)
model2 <- glm(Staying ~ Age.Group+Gender+Tenure+Num.Of.Products+Is.Active.Member,
data = rawdata,
family = binomial,
weights = rawdata$Employee)
summary(model2)
exp(-0.003319)
exp(-0.850280)
#goodness of fit test using deviance
c(deviance(model2), 1-pchisq(deviance(model2), 150))
# goodness of fit test using pearson residuals
pearres = residuals(model2,type="pearson")
pearson = sum(pearres^2)
round(c(pearson, 1-pchisq(pearson,150)),2)
attach(rawdata)
plot(log(Staying/(1-Staying)), Tenure)
deviance = resid(model2, type="deviance")
par(mfrow=c(1,2))
qqPlot(deviance)
hist(deviance)
overdispersion <- deviance(model2)/150
print(overdispersion)
newdata <- data.frame(Age.Group = 2,
Gender = 0,
Tenure = 2,
Num.Of.Products = 2,
Is.Active.Member = 1)
prediction1 <- predict(model1, newdata = newdata)
newdata <- data.frame(Age.Group = 2,
Gender = 0,
Tenure = 2,
Num.Of.Products = 2,
Is.Active.Member = 1)
newdata
prediction1 <- predict(model1, newdata = newdata)
newdata <- data.frame(Age.Group = 2,
Gender = 0,
Tenure = 2,
Num.Of.Products = 2,
Is.Active.Member = 1)
newdata
newdata$Num.Of.Products<-as.factor(newdata$Num.Of.Products)
newdata$Age.Group<-as.factor(newdata$Age.Group)
newdata$Gender<-as.factor(newdata$Gender)
newdata$Is.Active.Member<-as.factor(newdata$Is.Active.Member)
prediction1 <- predict(model1, newdata = newdata)
prediction1
newdata <- data.frame(Age.Group = 2,
Gender = 0,
Tenure = 2,
Num.Of.Products = 2,
Is.Active.Member = 1)
newdata
newdata$Num.Of.Products<-as.factor(newdata$Num.Of.Products)
newdata$Age.Group<-as.factor(newdata$Age.Group)
newdata$Gender<-as.factor(newdata$Gender)
newdata$Is.Active.Member<-as.factor(newdata$Is.Active.Member)
prediction1 <- predict(model1, newdata = newdata)
odds <- expe(prediction1)
newdata <- data.frame(Age.Group = 2,
Gender = 0,
Tenure = 2,
Num.Of.Products = 2,
Is.Active.Member = 1)
newdata
newdata$Num.Of.Products<-as.factor(newdata$Num.Of.Products)
newdata$Age.Group<-as.factor(newdata$Age.Group)
newdata$Gender<-as.factor(newdata$Gender)
newdata$Is.Active.Member<-as.factor(newdata$Is.Active.Member)
prediction1 <- predict(model1, newdata = newdata)
odds <- exp(prediction1)
odds/(odds+1)
prediction2 <- predict(model2, newdata = newdata)
odds <- exp(prediction2)
odds/(odds+1)
