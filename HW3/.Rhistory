knitr::opts_chunk$set(echo = TRUE)
setwd("E:\Data")
setwd("E:/Data")
# Import library you may need
library(car)
# Read the data set
fishfull = read.csv("Fish.csv",header=T, fileEncoding = 'UTF-8-BOM')
row.cnt = nrow(fishfull)
# Split the data into training and testing sets
fishtest = fishfull[(row.cnt-9):row.cnt,]
fish = fishfull[1:(row.cnt-10),]
setwd("E:/Data")
# Import library you may need
library(car)
# Read the data set
fishfull = read.csv("Fish.csv",header=T, fileEncoding = 'UTF-8-BOM')
row.cnt = nrow(fishfull)
# Split the data into training and testing sets
fishtest = fishfull[(row.cnt-9):row.cnt,]
fish = fishfull[1:(row.cnt-10),]
setwd("E:/Data")
# Import library you may need
library(car)
# Read the data set
fishfull = read.csv("Fish.csv",header=T, fileEncoding = 'UTF-8-BOM')
row.cnt = nrow(fishfull)
# Split the data into training and testing sets
fishtest = fishfull[(row.cnt-9):row.cnt,]
fish = fishfull[1:(row.cnt-10),]
head(fish)
attach(fish)
boxplot(Weight ~ Species)
plot(fish[,-2])
par(mfrow = c(3,2))
plot(Weight, Body.Height)
plot(Weight, Total.Length)
plot(Weight, Diagonal.Length)
plot(Weight, Height)
plot(Weight, Width)
par(mfrow = c(2,3))
plot(Weight, Body.Height)
plot(Weight, Total.Length)
plot(Weight, Diagonal.Length)
plot(Weight, Height)
plot(Weight, Width)
par(mfrow = c(2,3))
plot(Body.Height, Weight)
plot(Total.Length, Weight)
plot(Diagonal.Length, Weight)
plot(Height, Weight)
plot(Width, Weight)
corr(fish[,-2])
cor(fish[,-2])
round(cor(fish[,-2]),3)
model1 <- lm(Weight ~ Species + Body.Height + Total.Length + Diagonal.Length +Height + Width)
summary(model1)
cooks.distance(model1)
plot(cooks.distance(model1))
plot(cooks.distance(model1), type = 'h')
plot(cooks.distance(model1), type = 'h', ,lwd=3,col="red", ylab = "Cook's Distance")
plot(cooks.distance(model1), type = 'h', ,lwd=3,col="red", ylab = "Cook's Distance")
abline(h=1)
plot(cooks.distance(model1), type = 'h', ,lwd=3,col="red", ylab = "Cook's Distance")
abline(h=1, col = "blue")
cooks = cooks.distance(model1)
plot(cooks, type = 'h', ,lwd=3,col="red", ylab = "Cook's Distance")
abline(h=1, col = "blue")
which(cooks>1)
cooks = cooks.distance(model1)
plot(cooks, type = 'h', ,lwd=3,col="red", ylab = "Cook's Distance")
abline(h=1, col = "blue")
#which(cooks>1)
cooks = cooks.distance(model1)
plot(cooks, type = 'h', ,lwd=3,col="red", ylab = "Cook's Distance")
abline(h=1, col = "blue")
which(cooks>1)
dim(fish)
dim(fish)
fish2 <- fisn[-30,]
dim(fish)
fish2 <- fish[-30,]
dim(fish2)
rm =list(ls())
setwd("E:/Data")
# Import library you may need
library(car)
# Read the data set
fishfull = read.csv("Fish.csv",header=T, fileEncoding = 'UTF-8-BOM')
row.cnt = nrow(fishfull)
# Split the data into training and testing sets
fishtest = fishfull[(row.cnt-9):row.cnt,]
fish = fishfull[1:(row.cnt-10),]
head(fish)
rm(list=ls())
setwd("E:/Data")
# Import library you may need
library(car)
# Read the data set
fishfull = read.csv("Fish.csv",header=T, fileEncoding = 'UTF-8-BOM')
row.cnt = nrow(fishfull)
# Split the data into training and testing sets
fishtest = fishfull[(row.cnt-9):row.cnt,]
fish = fishfull[1:(row.cnt-10),]
head(fish)
attach(fish)
boxplot(Weight ~ Species)
par(mfrow = c(2,3))
plot(Body.Height, Weight)
plot(Total.Length, Weight)
plot(Diagonal.Length, Weight)
plot(Height, Weight)
plot(Width, Weight)
round(cor(fish[,-2]),3)
model1 <- lm(Weight ~ Species + Body.Height + Total.Length + Diagonal.Length +Height + Width, data = fish)
summary(model1)
cooks = cooks.distance(model1)
plot(cooks, type = 'h', ,lwd=3,col="red", ylab = "Cook's Distance")
abline(h=1, col = "blue")
which(cooks>1)
dim(fish)
fish2 <- fish[-30,]
dim(fish2)
model2 <- lm(Weight ~ Species + Body.Height + Total.Length + Diagonal.Length +Height + Width, data = fish2)
dim(fish)
fish2 <- fish[-30,]
dim(fish2)
model2 <- lm(Weight ~ Species + Body.Height + Total.Length + Diagonal.Length +Height + Width, data = fish2)
summary(model2)
fish2 <- fish[-30,]
model2 <- lm(Weight ~ Species + Body.Height + Total.Length + Diagonal.Length +Height + Width, data = fish2)
summary(model2)
r.squared = summary(model2)$r.squared
r.squared
threshold = max(10, )
r.squared = summary(model2)$r.squared
threshold = max(10, 1/(1-r.squared))
threshold
vif
r.squared = summary(model2)$r.squared
1/(1-r.squared)
threshold = max(10, 1/(1-r.squared))
threshold
vif
r.squared = summary(model2)$r.squared
threshold = max(10, 1/(1-r.squared))
threshold
vif
r.squared = summary(model2)$r.squared
threshold = max(10, 1/(1-r.squared))
cat("VIF thresold equals: ", threshold)
vif
r.squared = summary(model2)$r.squared
threshold = max(10, 1/(1-r.squared))
cat("VIF thresold equals: ", threshold)
vif(model2)
r.squared = summary(model2)$r.squared
threshold = max(10, 1/(1-r.squared))
cat("VIF thresold equals: ", threshold)
print("")
vif(model2)
r.squared = summary(model2)$r.squared
threshold = max(10, 1/(1-r.squared))
cat("VIF thresold equals: ", threshold)
print("\n")
vif(model2)
r.squared = summary(model2)$r.squared
threshold = max(10, 1/(1-r.squared))
cat("VIF thresold equals: ", threshold)
cat("\n")
vif(model2)
r.squared = summary(model2)$r.squared
threshold = max(10, 1/(1-r.squared))
cat("VIF thresold equals: ", threshold)
cat("\n\n")
vif(model2)
std.res <- std.res(model2)
std.res <- stdres(model2)
std.res <- stdres(model2)
library(MASS)
std.res <- stdres(model2)
std.res
library(MASS)
std.res <- stdres(model2)
library(MASS)
std.res <- stdres(model2)
dim(std.res)
library(MASS)
std.res <- stdres(model2)
length(std.res)
library(MASS)
std.res <- stdres(model2)
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "width")){
print(name)
}
library(MASS)
std.res <- stdres(model2)
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "width")){
head(fish2[name])
}
library(MASS)
std.res <- stdres(model2)
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "width")){
fish2[name]
}
library(MASS)
std.res <- stdres(model2)
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "width")){
fish2$name
}
library(MASS)
std.res <- stdres(model2)
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "width")){
print(fish2$name)
}
library(MASS)
std.res <- stdres(model2)
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "width")){
fish2[,name]
}
library(MASS)
std.res <- stdres(model2)
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "width")){
fish2[,c(name)]
}
library(MASS)
std.res <- stdres(model2)
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "width")){
cat(name)
fish2[, name]
}
library(MASS)
std.res <- stdres(model2)
for (name in ("Body.Height", "Total.Length", "Diagonal.Length", "Height", "width")){
library(MASS)
std.res <- stdres(model2)
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "width")){
cat(name)
fish2[, name]
}
library(MASS)
std.res <- stdres(model2)
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "width")){
cat(name)
print(fish2[, name])
}
library(MASS)
std.res <- stdres(model2)
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "Width")){
cat(name)
print(fish2[, name])
}
library(MASS)
std.res <- stdres(model2)
par(mfrow = c(2,3))
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "Width")){
cat(name)
plot(fish2[,name], std.res, )
}
library(MASS)
std.res <- stdres(model2)
par(mfrow = c(2,3))
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "Width")){
cat(name)
plot(fish2[,name], std.res, xlab = name)
}
library(MASS)
std.res <- stdres(model2)
par(mfrow = c(2,3))
for (name in c("Body.Height", "Total.Length", "Diagonal.Length", "Height", "Width")){
cat(name)
plot(fish2[,name], std.res, xlab = name)
abline(h=0, col="red")
}
fitted <- model2$fitted
fitted
fitted <- model2$fitted
plot(fitted, std.res)
qqPlot(std.res)
par(mfrow = c(1,2))
hist(std.res)
qqPlot(std.res)
model3 <- lm(Weight ~ Species + Total.Length, data = fish2)
summary(model3)
anova(model3, model2)
vif(model3)
r.squared = summary(model3)$r.squared
threshold = max(10, 1/(1-r.squared))
cat("VIF thresold equals: ", threshold)
cat("\n\n")
vif(model3)
std.res <- stdres(model3)
fitted <- model3$fitted
par(mfrow = c(1,3))
plot(fish2$Total.Length, std.res)
std.res <- stdres(model3)
fitted <- model3$fitted
par(mfrow = c(1,2))
plot(fish2$Total.Length, std.res)
std.res <- stdres(model3)
fitted <- model3$fitted
par(mfrow = c(1,2))
plot(fish2$Total.Length, std.res, xlab = "Total.Length")
std.res <- stdres(model3)
fitted <- model3$fitted
par(mfrow = c(1,2))
plot(fish2$Total.Length, std.res, xlab = "Total.Length")
abline(h=0, col="red")
std.res <- stdres(model3)
fitted <- model3$fitted
par(mfrow = c(1,2))
plot(fish2$Total.Length, std.res, xlab = "Total.Length")
abline(h=0, col="red")
plot(fitted, std.res, xlab = "Fitted Values")
abline(h=0, col="red")
std.res <- stdres(model3)
fitted <- model3$fitted
par(mfrow = c(2,2))
plot(fish2$Total.Length, std.res, xlab = "Total.Length")
abline(h=0, col="red")
plot(fitted, std.res, xlab = "Fitted Values")
abline(h=0, col="red")
hist(std.res)
qqPlot(std.res)
bc = boxCox(model1)
bc = boxCox(model3)
opt.lambda = bc$x[which.max(bc$y)]
cat("Optimal lambda:", round(opt.lambda/0.5)*0.5, end="\n")
model4 <- lm(sqrt(Weight) ~ Species + Total.Length, data = fish2)
summary(model4)
std.res <- stdres(model4)
fitted <- model4$fitted
par(mfrow = c(2,2))
plot(fish2$Total.Length, std.res, xlab = "Total.Length")
abline(h=0, col="red")
plot(fitted, std.res, xlab = "Fitted Values")
abline(h=0, col="red")
hist(std.res)
qqPlot(std.res)
r.squared <- summary(model2)$r.squared
adj.r.squared <- summary(model2)$adj.r.squared
cat("Model2:  ", "R Squared = ", r.squared, "     ", "Adjusted R Squared = ", adj.r.squared)
r.squared <- summary(model2)$r.squared
adj.r.squared <- summary(model2)$adj.r.squared
cat("Model2:  ", "R Squared = ", r.squared, "     ", "Adjusted R Squared = ", adj.r.squared)
r.squared <- summary(model2)$r.squared
adj.r.squared <- summary(model2)$adj.r.squared
cat("Model2:  ", "R Squared = ", r.squared, "     ", "Adjusted R Squared = ", adj.r.squared)
r.squared <- summary(model3)$r.squared
adj.r.squared <- summary(model3)$adj.r.squared
cat("Model3:  ", "R Squared = ", r.squared, "     ", "Adjusted R Squared = ", adj.r.squared)
r.squared <- summary(model4)$r.squared
adj.r.squared <- summary(model4)$adj.r.squared
cat("Model4:  ", "R Squared = ", r.squared, "     ", "Adjusted R Squared = ", adj.r.squared)
r.squared <- summary(model2)$r.squared
adj.r.squared <- summary(model2)$adj.r.squared
cat("Model2:  ", "R Squared = ", r.squared, "     ", "Adjusted R Squared = ", adj.r.squared, "\n")
r.squared <- summary(model3)$r.squared
adj.r.squared <- summary(model3)$adj.r.squared
cat("Model3:  ", "R Squared = ", r.squared, "     ", "Adjusted R Squared = ", adj.r.squared, "\n")
r.squared <- summary(model4)$r.squared
adj.r.squared <- summary(model4)$adj.r.squared
cat("Model4:  ", "R Squared = ", r.squared, "     ", "Adjusted R Squared = ", adj.r.squared, "\n")
pred <- predict(model3, newdata = fishtest)
pred
pred <- predict(model3, newdata = fishtest)
pred
pred <- predict(model3, newdata = fishtest)
MSPE <- mean((pred1-fishtest$Weight)^2)
pred <- predict(model3, newdata = fishtest)
MSPE <- mean((pred-fishtest$Weight)^2)
MSPE
pred <- predict(model3, newdata = fishtest)
MSPE <- mean((pred-fishtest$Weight)^2)
cat("MSPE of Model 3 = ", MSPE, "\n")
pred <- predict(model3, newdata = fishtest)
MSPE <- mean((pred-fishtest$Weight)^2)
cat("MSPE of Model 3 = ", MSPE, "\n")
pred <- predict(model4, newdata = fishtest)
MSPE <- mean((pred-fishtest$Weight)^2)
cat("MSPE of Model 4 = ", MSPE, "\n")
pred <- predict(model3, newdata = fishtest)
MSPE <- mean((pred-fishtest$Weight)^2)
cat("MSPE of Model 3 = ", MSPE, "\n")
pred <- predict(model4, newdata = fishtest)
MSPE <- mean((pred-fishtest$Weight)^2)
cat("MSPE of Model 4 = ", MSPE, "\n")
pred <- predict(model3, newdata = fishtest)
MSPE <- mean((pred-fishtest$Weight)^2)
cat("MSPE of Model 3 = ", MSPE, "\n")
pred <- predict(model4, newdata = fishtest)
MSPE <- mean((pred-fishtest$Weight)^2)
cat("MSPE of Model 4 = ", MSPE, "\n")
pred <- predict(model3, newdata = fishtest)
MSPE <- mean((pred-fishtest$Weight)^2)
cat("MSPE of Model 3 = ", MSPE, "\n")
pred <- predict(model4, newdata = fishtest)
MSPE <- mean((pred-fishtest$Weight)^2)
cat("MSPE of Model 4 = ", MSPE, "\n")
pred <- predict(model3, newdata = fishtest)
MSPE <- mean((pred-fishtest$Weight)^2)
cat("MSPE of Model 3 = ", MSPE, "\n")
pred <- (predict(model4, newdata = fishtest))^2
MSPE <- mean((pred-fishtest$Weight)^2)
cat("MSPE of Model 4 = ", MSPE, "\n")
pred <- predict(model3, newdata = fishtest)
MSPE <- mean((pred-fishtest$Weight)^2)
cat("MSPE of Model 3 = ", MSPE, "\n")
# need to take squared value of the prediction results of model 4
pred <- (predict(model4, newdata = fishtest))^2
MSPE <- mean((pred-fishtest$Weight)^2)
cat("MSPE of Model 4 = ", MSPE, "\n")
fishtest2 <- data.frame(Species = "Perch", Body.Height = 28, Total.Length = 32)
predict(model4, newdata = fishtest2, interval = "prediction", level = 0.9)
fishtest2 <- data.frame(Species = "Perch", Total.Length = 32)
predict(model4, newdata = fishtest2, interval = "prediction", level = 0.9)
fishtest2 <- data.frame(Species = "Perch", Body.Height = 28, Total.Length = 32)
(predict(model4, newdata = fishtest2, interval = "prediction", level = 0.9))^2
fishtest2 <- data.frame(Species = "Perch", Body.Height = 28, Total.Length = 32)
# need to take squared value of the prediction results of model 4
(predict(model4, newdata = fishtest2, interval = "prediction", level = 0.9))^2
fishtest2 <- data.frame(Species = "Perch",  Total.Length = 32)
# need to take squared value of the prediction results of model 4
(predict(model4, newdata = fishtest2, interval = "prediction", level = 0.9))^2
fishtest2 <- data.frame(Species = "Perch",  Total.Length = 32)
# need to take squared value of the prediction results of model 4
(predict(model4, newdata = fishtest2, interval = "prediction", level = 0.9))^2
knitr::opts_chunk$set(echo = TRUE)
cooks = cooks.distance(model1)
plot(cooks, type = 'h', ,lwd=3, ylab = "Cook's Distance")
abline(h=1, col = "blue")
which(cooks>1)
cooks = cooks.distance(model1)
plot(cooks, type = 'h', ,lwd=3, ylab = "Cook's Distance")
abline(h=1, col = "red")
which(cooks>1)
library(MASS)
std.res <- stdres(model2)
par(mfrow = c(2,3))
plot(fish2$Body.Height, std.res, xlab = "Body.Height")
abline(h=0, col="red")
plot(fish2$Total.Length, std.res, xlab = "Total.Length")
abline(h=0, col="red")
plot(fish2$Diagonal.Length, std.res, xlab = "Diagonal.Length")
abline(h=0, col="red")
plot(fish2$Height, std.res, xlab = "Height")
abline(h=0, col="red")
plot(fish2$Width, std.res, xlab = "Width")
abline(h=0, col="red")
fitted <- model2$fitted
plot(fitted, std.res)
abline(h = 0, col = "red")
fishtest2 <- data.frame(Species = "Perch",  Body.Height = 28, Total.Length = 32)
# need to take squared value of the prediction results of model 4
(predict(model4, newdata = fishtest2, interval = "prediction", level = 0.9))^2
fishtest2 <- data.frame(Species = "Perch",  Body.Height = 28, Total.Length = 32)
# need to take squared value of the prediction results of model 4
(predict(model4, newdata = fishtest2, interval = "prediction", level = 0.9))^2
